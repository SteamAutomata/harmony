"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8891],{41057:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a Provider named `name` using a sets of `methods` & `props`, the resulting Provider object must not be used in itself.","params":[{"name":"name","desc":"","lua_type":"string"},{"name":"methods","desc":"","lua_type":"M"},{"name":"props","desc":"","lua_type":"P"}],"returns":[{"desc":"","lua_type":"Provider"}],"function_type":"static","source":{"line":32,"path":"src/Harmony/Provider.luau"}},{"name":"Connect","desc":"Connects the Provider to a lifecycle Event.","params":[{"name":"event","desc":"","lua_type":"Event.Event<T...>"},{"name":"callback","desc":"","lua_type":"(T...) -> ()"}],"returns":[{"desc":"","lua_type":"Provider"}],"function_type":"method","source":{"line":58,"path":"src/Harmony/Provider.luau"}},{"name":"SetInterval","desc":"Starts a while loop, invoking the callback every `interval` seconds.\\nWill subscribe to OnStart Lifecycle.\\nArgument `spawn` describe whenever to call the `callback` through the engine scheduler","params":[{"name":"interval","desc":"","lua_type":"number"},{"name":"spawn","desc":"","lua_type":"boolean"},{"name":"callback","desc":"","lua_type":"() -> ()"}],"returns":[{"desc":"","lua_type":"Provider"}],"function_type":"method","source":{"line":72,"path":"src/Harmony/Provider.luau"}}],"properties":[],"types":[],"name":"Provider","desc":"A Provider is simply a table with functions and properties that can be required for each. In other words, it is a static class. Because of a Provider just being a static class, not having a constructor, the Luau OOP syntax can\'t fit.\\n\\nThere is one ModuleScript per Provider, each containing their properties `Props` and methods `Methods`.","source":{"line":14,"path":"src/Harmony/Provider.luau"}}')}}]);