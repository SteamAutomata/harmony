"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5468],{6042:e=>{e.exports=JSON.parse('{"functions":[{"name":"Add","desc":"Add a ModuleScript or a Folder containing ModuleScripts to Load ","params":[{"name":"instance","desc":"","lua_type":"ModuleScript|Folder"}],"returns":[{"desc":"","lua_type":"Harmony"}],"function_type":"method","source":{"line":74,"path":"src/Harmony/init.luau"}},{"name":"Init","desc":"Loads all modules, starts lifecycles and mark Harmony as inited","params":[],"returns":[{"desc":"","lua_type":"Harmony"}],"function_type":"method","source":{"line":94,"path":"src/Harmony/init.luau"}},{"name":"AllowTelemetry","desc":"Allows defined players to use Telemetry, the callback is invoked each time a player joins","params":[{"name":"callback","desc":"","lua_type":"(player:Player) -> boolean"}],"returns":[{"desc":"","lua_type":"Harmony"}],"function_type":"method","source":{"line":127,"path":"src/Harmony/init.luau"}},{"name":"Expect","desc":"Currently unused, later used for dependency management ?","params":[{"name":"t","desc":"","lua_type":"T"}],"returns":[{"desc":"","lua_type":"T\\n"}],"function_type":"method","source":{"line":142,"path":"src/Harmony/init.luau"}},{"name":"Wait","desc":"Yields until Harmony is inited.\\nRequired when using the Framework in a LocalScript or a Script.\\n\\n```lua\\nlocal Harmony = require(ReplicatedStorage.Harmony):Wait()\\n```","params":[],"returns":[{"desc":"","lua_type":"Harmony"}],"function_type":"method","source":{"line":158,"path":"src/Harmony/init.luau"}}],"properties":[],"types":[],"name":"Harmony","desc":"The Main class of the module, most classes of Harmony can be accessed from here.\\n\\nBootstrapping on the server:\\n```lua\\nlocal ReplicatedStorage = game:GetService(\\"ReplicatedStorage\\")\\nlocal ServerScriptService = game:GetService(\\"ServerScriptService\\")\\nlocal RunService = game:GetService(\\"RunService\\")\\n\\n-- Loads ByteNet defs, global state and player state\\nrequire(ReplicatedStorage.Defs)\\n\\nlocal Harmony = require(ReplicatedStorage.Harmony)\\n\\t-- Load Services\\n\\t:Add(ServerScriptService.Services) \\n\\t-- Load Components\\n\\t:Add(ServerScriptService.Components) \\n\\t-- Allow telemetry only in Studio playtesting\\n\\t:AllowTelemetry({\\n\\t\\twhen = function(player: Player) \\n\\t\\t\\treturn RunService:IsStudio()\\n\\t\\tend\\n\\t}) \\n\\t:Init()\\n```\\n\\nBootstrapping on the client:\\n```lua\\nlocal ReplicatedFirst = game:GetService(\\"ReplicatedFirst\\")\\nlocal ReplicatedStorage = game:GetService(\\"ReplicatedStorage\\")\\n\\nrequire(ReplicatedStorage.Harmony)\\n\\t:Add(ReplicatedFirst.Components)\\n\\t:Add(ReplicatedFirst.Controllers)\\n\\t:Init()\\n```","source":{"line":52,"path":"src/Harmony/init.luau"}}')}}]);